{"version":3,"sources":["scss/modules/_font.scss","scss/_placeholders.scss","scss/_variables.scss","scss/modules/_modal.scss","scss/modules/_card.scss","scss/modules/_navbarFullScreen.scss","scss/style.scss","scss/_mixins.scss"],"names":[],"mappings":"AAAA;EACI,oBAAA;EACA,iDAAA;;AAGJ;EACI,uBAAA;EACA,iDAAA;;ACLJ;EACI,aAAA;EACA,uBAAA;EACA,mBAAA;;;AAyBJ;EACI,aAAA;EACA,uBAAA;EACA,eAAA;;;AAUJ;EACI,WAAA;EACA,aAAA;EACA,uBAAA;EACA,mBAAA;;;AAGJ;EACI,mCCjCO;EDkCP,iBAAA;;;AEtCJ;EACI,aAAA;EACA,eAAA;EACA,UAAA;EACA,OAAA;EACA,MAAA;EACA,WAAA;EACA,YAAA;EACA,oCAAA;EACA,cAAA;;;AAIJ;EACI,yBAAA;EACA,gBAAA;EACA,sBAAA;EACA,WAAA;EACA,aAAA;EACA,6BAAA;EACA,eAAA;;;AAWJ;EACI,WAAA;EACA,kBAAA;EACA,YAAA;EACA,eAAA;EACA,eAAA;EACA,mBAAA;EACA,iBAAA;EACA,iBD/BU;;;ACmCV;EACI,cAAA;EACA,qBAAA;EACA,eAAA;;;AAIR;EACI,WAAA;EACA,YAAA;;;AAGJ;EACI,YAAA;EACA,aAAA;EACA,aAAA;;;ACxEJ;EACI,uBAAA;EACA,8FAAA;;AAGF;EACE,uBAAA;EACA,8FAAA;;AAGF;EAEE,YAAA;EACA,aAAA;EAGA,kBAAA;EACA,iCAAA;;;AAEF;EAEE,eAAA;EACA,sBAAA;;;AAEF;EACE,wFAAA;EAEA,6BAAA;EACA,oCAAA;EACA,qBAAA;EACA,qBAAA;EACA,cAAA;EACA,gBAAA;EAEA,SAAA;EACA,iBAAA;EACA,0BAAA;EACA,mBAAA;;;AAGF;EACE,wFAAA;EAEA,6BAAA;EACA,oCAAA;EACA,qBAAA;EACA,qBAAA;EACA,cAAA;EACA,gBAAA;EAEA,SAAA;;;AAIF;EACE,0CAAA;EACA,gBAAA;;AACA;EACE,YAAA;EACA,YAAA;EACA,eAAA;;AACA;EACI,0BAAA;EACA,4BAAA;EACA,uBAAA;;AAGN;EACE,cF5CQ;;;AEgDZ;EACE,2CAAA;;;AAGF;EACE,iBAAA;;;AAQF;;;CAAA;ACrFF;EACI,YAAA;EACA,QAAA;EACA,eAAA;EACA,UAAA;EACA,MAAA;EACA,OAAA;EACA,uBAAA;EACA,oCAAA;EACA,kBAAA;EACA,gBAAA;;;AAGF;EACE,kBAAA;EACA,QAAA;EACA,WAAA;EACA,kBAAA;EACA,gBAAA;;;AAGF;EACE,YAAA;EACA,qBAAA;EACA,eAAA;EACA,cAAA;EACA,cAAA;EACA,gBAAA;;;AAGF;EACE,cAAA;;;AAGF;EACE,kBAAA;EACA,SAAA;EACA,WAAA;EACA,eAAA;;;AAGF;EACE;IAAY,eAAA;;;EACZ;IACA,eAAA;IACA,SAAA;IACA,WAAA;;;AChBJ;EACI,yBAAA;EACA,aAAA;EACA,eAAA;EACA,gCJjBI;EIkBJ,kBAAA;;AACA;EACI,iBAAA;;AACA;EACI,yBJlBL;;AImBK;EACI,WAAA;;AAGR;EACI,iBJvBE;EIwBF,eJvBE;;AIiCd;ECpDI,kBAAA;EACA,QDoDsB;ECnDtB,SDmD2B;EClD3B,WDkD+B;ECjD/B,QDiDoC;EChDpC,gCAAA;;;ADyDA;EACI,aAAA;EACA,6BAAA;EACA,eAAA;EACA,qBAAA;EACA,UAAA;;AAEI;EACI,YAAA;EACA,aAAA;EACA,mBAAA;EACA,yBAAA","file":"style.a6dae8f7.css","sourceRoot":"..","sourcesContent":["@font-face {\n    font-family: \"Blood\";\n    src: url('../polices/Blood-Thirst.ttf');\n}\n\n@font-face {\n    font-family: \"Schwifty\";\n    src: url('../polices/get_schwifty.ttf');\n}\n\n","// ce fichier permet de créer des bouts de codes comme mixin mais cette fois sans les paramètres \n\n%flex-center{\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n// pour pouvoir l'utiliser dans le fichier style.scss on doit faire ceci:\n// @extend %flex-center        par exemple.\n\n%flexArrow{\n    display: flex;\n    justify-content: space-around;\n    flex-wrap: wrap;\n}\n\n%flexCenter{\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\n\n%flexBetween{\n    display: flex;\n    justify-content: space-between;\n    flex-wrap: wrap;\n}\n\n%flexCenterWrap{\n    display: flex;\n    justify-content: center;\n    flex-wrap: wrap;\n}\n\n%absoluteCenter{\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%)\n}\n\n%DivTitre{\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n%policeTitre{\n    font-family: $Schwifty;\n    font-weight: bold;\n}","\n// chaque variable contient un signe $ et un nom très claire. \n//*****************************************************\n\n// utilitaires couleurs: \n\n\n\n\n// utilitaire texte:\n\n\n\n\n// utilitaires position et dimensions:\n\n$Nosifer: 'Nosifer', sans-serif;\n$Blood: 'Blood' , sans-serif;\n$Schwifty: 'Schwifty' , sans-serif;\n\n\n$blue: rgb(46, 129, 206);\n$vertDuTexte: rgb(127, 255, 0);\n$policeTitre: 2rem;\n$colorTextH4: #e9bd34;","// button {\n//     margin: auto;\n//     position: absolute;\n//     top: 50%;\n//     left: 50%;\n//     transform: translate(-50%, -50%);\n//     height: 100px;\n//     width: 130px;\n//     background: thistle;\n//     font-family: 'Lato';\n//     font-size: 24px;\n// }\n\n\n.modal {\n    display: none;\n    position: fixed;\n    z-index: 1;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0,0,0,0.4);\n    overflow: auto;\n}\n\n\n.modal-content {\n    background-color: #fefefe;\n    margin: 15% auto;\n    border: 1px solid #888;\n    width: 100%;\n    display: flex;\n    justify-content: space-around;\n    flex-wrap: wrap;\n}\n\n\n// .modal-content p {\n//     font-size: 16px;\n//     font-family: 'Lato';\n    \n// }\n\n\n.close {\n    color: #aaa;\n    position: relative;\n    float: right;\n    cursor: pointer;\n    font-size: 50px;\n    padding: 0 10px 0 0;\n    font-weight: bold;\n    color: $vertDuTexte;\n}\n\n.closebtn{\n    &:hover{\n        color: #e4bfc1;\n        text-decoration: none;\n        cursor: pointer;\n    }\n}\n\n.modal img{\n    width: 100%;\n    height: auto;\n}\n\n.character{\n    width: 150px;\n    height: 300px;\n    padding: 10px;\n}\n","@font-face {\n    font-family: \"my_font5\";\n    src: url(\"https://raw.githubusercontent.com/MANOJ-M-01/Assets/main/fonts/FIGHTER%20BRUSH.ttf\");\n  }\n  \n  @font-face {\n    font-family: \"my_font6\";\n    src: url(\"https://raw.githubusercontent.com/MANOJ-M-01/Assets/main/fonts/Fusterd%20Brush.otf\");\n  }\n \n  fieldset{\n    // width: max-content;\n    border: none;\n    outline: none;\n    // box-shadow: 1px 1px 10px 2px #5E2A73;\n    // margin: auto;\n    border-radius: 5px;\n    transition:all 0.35s ease-in-out\n  }\n  fieldset:hover{\n      // box-shadow: 1px 1px 10px -1px #bd0835;\n    cursor:pointer;\n    transform: scale(1.03);\n  }\n  .text_head {\n    background: linear-gradient(to right, #5E2A73 0%, #bd0835 40%, #bd4a08 60%, #f0a608 90%);\n    // width: max-content;\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n    background-clip: text;\n    font-family: my_font6;\n    font-size: 6em;\n    font-weight: 100;\n    // padding: 20px 40px;\n    margin: 0;\n    line-height: 50px;\n    transform: rotateZ(-15deg);\n    margin-bottom: 30px;\n  }\n  \n  .text {\n    background: linear-gradient(to right, #bd4a08 0%, #bd0835 40%, #f0a608 60%, #5E2A73 90%);\n    // width: max-content;\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n    background-clip: text;\n    font-family: my_font5;\n    font-size: 2em;\n    font-weight: 100;\n    // padding:0 10px 0 20px;\n    margin:0;\n  \n  }\n\n  .card {\n    box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);\n    transition: 0.3s;\n    img{\n      width: 110px;\n      height: auto;\n      cursor: pointer;\n      &:hover{\n          transform: scale(1.5, 1.5);\n          transition: .5s ease-in-out;\n          filter: grayscale(100%);\n        }\n    }\n    .container{\n      color: $colorTextH4;\n    }\n  }\n  \n  .card:hover {\n    box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2);\n  }\n  \n  .container {\n    padding: 2px 16px;\n  }\n  \n.overlay-content{\n    @extend %flexCenterWrap;\n}\n  \n  \n  /*\n  Author:MANOJ M;\n  Link :https://codepen.io/manoj-m-01\n  */",".overlay {\n    height: 100%;\n    width: 0;\n    position: fixed;\n    z-index: 1;\n    top: 0;\n    left: 0;\n    background-color: rgb(0,0,0);\n    background-color: rgba(0,0,0, 0.9);\n    overflow-x: hidden;\n    transition: 0.5s;\n  }\n  \n  .overlay-content {\n    position: relative;\n    top: 25%;\n    width: 100%;\n    text-align: center;\n    margin-top: 30px;\n  }\n  \n  .overlay a {\n    padding: 8px;\n    text-decoration: none;\n    font-size: 36px;\n    color: #818181;\n    display: block;\n    transition: 0.3s;\n  }\n  \n  .overlay a:hover, .overlay a:focus {\n    color: #f1f1f1;\n  }\n  \n  .overlay .closebtn {\n    position: absolute;\n    top: 20px;\n    right: 45px;\n    font-size: 60px;\n  }\n  \n  @media screen and (max-height: 450px) {\n    .overlay a {font-size: 20px}\n    .overlay .closebtn {\n    font-size: 40px;\n    top: 15px;\n    right: 35px;\n    }\n  }\n\n  ","// sass --style=compressed pour compresser \n\n// 1ère méthode on link le style.css dans index.html:\n// pour compiler on utilise une commande sass --watch pour dire que notre fichier est à l'écoute des changements \n// ensuite on met à partir de quel fichier on écoute dans notre cas à partir de scss/style.scss\n// et la dernière c'est pour indiquer où compiler c'est à dire css/style.css\n\n// ça donne ça à la fin : sass --watch scss/style.scss css/style.css\n\n\n// // 2ème méthode on link le style.scss dans index.html:\n// on utilse parcel pour tt compiler et dans cette méthode le dossier dist va être créer et dedans il génére un fichier css à partir de ce qu'on a créé en scss.\n\n\n// on commance à importer le fichier _variables car il contient nos variables qui sont aussi utilisées dans les autres fichiers \n// les erreurs à éviter : \n//  1 - bien nommer les variables   \n//  2 - les mixins servent à avoir des bouts de codes avec des paramètres dedans \n//  3 - les placeholders c'est comme les mixins sauf que cette fois ci c'est sans les paramètres \n\n@import './modules/font';\n@import './variables'; // les underscores pour dire que ces des fichiers qu'on a importer . c'est des bonnes pratiques dans le style .css\n@import './mixins';\n@import './placeholders';\n@import './modules/modal';\n@import './modules/card';\n@import './modules/navbarFullScreen';\n\n\n\nbody {\n    background-color: rgb(14, 12, 12);\n    height:100vh;\n    font-size: 1rem;\n    font-family: $Blood;\n    color: greenyellow;\n    .container {\n        font-size: 0.8rem;\n        &--image {\n            background-color: $blue;\n            &__small {\n                height: 2px;\n            }\n        }\n        &--text {\n            color: $vertDuTexte;\n            font-size: $policeTitre;\n        }\n\n    }\n    .epidodes{\n        @extend %DivTitre;\n        @extend %policeTitre;\n    }\n}\n\n.img{\n    @include absolute-el (50%, 2%, 50%, 3%, -50%, -50%);\n    @extend %flex-center;\n}\n\n.app_lists{\n    \n    div{\n        \n    }\n    ul{\n        display: flex;\n        justify-content: space-around;\n        flex-wrap: wrap;\n        list-style-type: none;\n        padding: 0;\n        li{\n            .card{\n                width: 300px;\n                height: 400px;\n                margin-bottom: 30px;\n                border: 1px solid rgb(7, 230, 7); \n                \n            }\n        }\n    }\n}\n\n\n\n\n\n// *{\n//     margin: 0;\n//     padding: 0;\n//     box-sizing: border-box;\n// }\n\n// .container{\n//     display: flex;\n//     justify-content: space-around;\n//     flex-wrap: wrap;\n\n// }\n\n// section{\n//     background-color: rgb(32, 140, 202);\n//     border-radius: 15px;\n//     width: 200px;\n//     margin: 60px;\n//     border: 1px solid black;\n//     padding-bottom: 30px;\n// }\n\n","// ce fichier nous sert à créer des bouts de codes qui seront utilisés avec des paramètres \n//* * * * * * * * * * * * * * *  ** * * * * * * ** * * * * * ** * * * * * * *\n\n@mixin absolute-el ($top, $right, $bottom, $left, $x, $y) {\n    position: absolute;\n    top: $top;\n    right: $right;\n    bottom: $bottom;\n    left: $left;\n    transform: translate($x,$y);\n}\n// autre exemple de bout de code réutilisable avec paramètre. \n\n@mixin pseudo-el ($dipplay: block, $pos: absolute) {\n    display: $dipplay;\n    position: $pos;\n}\n\n// cette fois pour pourvoir l'utiliser dans le fichier style.scss on doit ecrire : \n// @include absolute.el(50%,0,0,50%,-50%,-50%) par exemple. "]}