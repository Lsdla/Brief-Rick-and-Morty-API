{"version":3,"sources":["js/scriptLieux.js"],"names":["containerTop","document","querySelector","fetchData","uri","fetch","then","resp","json","Locations","datas","locations","results","createLocations","addEventTitle","catch","error","console","log","location","locationCard","createElement","setAttribute","innerHTML","url","name","type","dimension","forEach","appendChild","createLocation","eventTitles","querySelectorAll","addEventListener","showDetails","bind","event","self","target","dataset","Promise","all","residents","map","res","modalResident","createResident","modal","getElementById","style","display","closeButton","e","lieux","value","planets","str","planet","resident","image","status","species","radioButton","input","showPlanets","label","textContent","createInput","uriS","listTypes","index","push","createListType","typeArray","Set","sort","i","length","createLabel","pickAllPage"],"mappings":"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","file":"scriptLieux.d0d76438.js","sourceRoot":"..","sourcesContent":["\n\n\n// function fetchData(uri){ \n//   fetch(uri)\n//     .then(resp=>resp.json())\n//     .then(data => {\n//       console.log(data);\n//       uri = data.info['next'];\n//       // Check next API url is empty or not, if not empty call the above function \n//       if(uri != '' && uri != null){\n//           fetchData(uri);\n//       }\n//   })\n// }\n\n\n\n// .then(data => {\n//       console.log(\"avant\",uri);\n//       uri = data.info['next'];\n//       console.log(\"apres\",uri);\n//       // Check next API url is empty or not, if not empty call the above function \n//       if(uri != '' && uri != null){\n//           fetchData(uri);\n//       }\n//   })\n\nlet containerTop = document.querySelector('.top');\n\nfunction fetchData(uri) {\n  return fetch(uri)\n    .then(function (resp) {\n      return resp.json()\n    })\n  // .then(function(data){\n  // }).catch(function(error) {\n  //   console.error(error);\n  // })\n}\n\n\n\nclass Locations {\n  locations = [];\n  constructor(uri) {\n    fetchData(uri).then((datas) => {\n      this.locations = datas.results;\n      this.createLocations();\n      this.addEventTitle();\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  createLocation(location) {\n    let locationCard = document.createElement(\"div\");\n    locationCard.setAttribute(\"class\", \"lieux-card\");\n    locationCard.innerHTML = \n          ` <div class=\"lieux-card_info\">\n                <img src=\"../images/rick-and-morty-space-wallpaper-preview.jpeg\" alt=\"\" class=\"image\">\n                <a class=\"location-name\" data-url=\"${location.url}\">Name : ${location.name}</a>\n                <p>Type : ${location.type}</p>\n                <p>Dimension : ${location.dimension}</p>\n            </div>`;\n    return locationCard;\n  }\n\n  createLocations() {\n    let locations = document.querySelector(\".lieux\");\n    this.locations.forEach(location => {\n      // console.log(location);\n      locations.appendChild(\n        this.createLocation(location)\n      );\n    });\n    this.addEventTitle();\n  };\n\n  \n  addEventTitle() {\n    let eventTitles = document.querySelectorAll(\".location-name\");\n\n    eventTitles.forEach(location => {\n      location.addEventListener(\"click\", this.showDetails.bind(this))\n    })\n  }\n\n  showDetails(event) {\n    let self = this;\n    fetch(event.target.dataset.url)\n      .then(function (resp) {\n        return resp.json()\n      }).then(function (locations) {\n        Promise.all(locations.residents.map(url => fetchData(url)))\n          .then(resp => Promise.all(resp.map(res => res)))\n          .then(residents => {\n            let modalResident = document.querySelector(\".modal-resident\")\n            modalResident.innerHTML = self.createResident(residents);\n            let modal = document.getElementById(\"myModal\")\n            modal.style.display = \"block\";\n            let closeButton = document.querySelector(\".close\")\n            closeButton.addEventListener(\"click\", ()=>{\n            modal.style.display = \"none\";\n            })\n          });\n      }).catch(function (error) {\n        console.error(error);\n      })\n    }\n  \n    showPlanets(e) {\n      let lieux = document.querySelector(\".lieux\")\n      lieux.innerHTML = \"\";\n      let type = e.target.value;\n      let url = \"https://rickandmortyapi.com/api/location?type=\" + type;\n      fetch(url)\n        .then(function (resp) {\n          return resp.json()\n        }).then(function (location) {\n          let planets = location.results;\n          let str =\n            planets.forEach(planet => {\n              lieux.innerHTML +=\n                `<div class=\"lieux-card\">\n                <div class=\"lieux-card_info\">\n                <img src=\"../images/rick-and-morty-space-wallpaper-preview.jpeg\" alt=\"\" class=\"image\">\n                    <a class=\"location-name\" data-url=\"\">Name : ${planet.name}</a>\n                    <p>Type : ${planet.type}</p>\n                    <p>Dimension : ${planet.dimension}</p>\n                </div>\n            </div>`\n            })\n            return str;\n        }).catch(function (error) {\n          console.error(error);\n        })\n    }\n\n  createResident(residents) {\n    let str = `<div id=\"myModal\" class=\"modal\">\n                <span class=\"close\">&times;</span>\n                      <!-- Modal content -->\n                  <div class=\"modal-content\">`;\n    residents.forEach(resident => {\n      str += `<div class=\"modal-container\">\n                            <div class=\"lieux-card_image\">\n                                <img src=\"${resident.image}\" alt=\"image\" class=\"img-resident\">\n                            </div>\n                            <div class=\"lieux-card_info\">\n                                <a>Name : ${resident.name}</a>\n                                <p>Status : ${resident.status}</p>\n                                <p>Species : ${resident.species}</p>\n                            </div>\n                        </div>`})\n    str += `</div>\n          </div>`\n    return str;\n  }\n\n\n  createInput(radioButton) {\n    let input = document.createElement('input');\n    input.setAttribute('type', \"radio\");\n    input.setAttribute(\"id\", radioButton);\n    input.setAttribute('value', radioButton);\n    input.setAttribute(\"name\", \"typeLocation\");\n    input.addEventListener(\"click\", this.showPlanets.bind(this));\n    return input\n  }\n\n  createLabel(radioButton) {\n    let label = document.createElement('label');\n    label.setAttribute('class', 'type-label')\n    label.textContent = radioButton;\n    label.appendChild(this.createInput(radioButton));\n    return label\n  }\n\n  pickAllPage() {\n\n    // tableau pour récupérer les url de toutes les pages \n    let uriS = []\n\n    // tableau dans lequel sera insérer les différents types de lieux\n    let listTypes = [];\n\n    //boucles sur les uri de tous les pages qu'on insère dans le tableau uriS\n    for (let index = 0; index < 7; index++) {\n      uriS.push(\"https://rickandmortyapi.com/api/location?page=\" + index)\n    }\n    Promise.all(uriS.map(url => fetch(url)))\n      .then(resp => Promise.all(resp.map(res => res.json())))\n      .then(locations => {\n        locations.forEach(location => {\n          location.results.forEach(res => {\n            listTypes.push(res.type);\n          })\n          // console.log(listTypes);\n        })\n        this.createListType(listTypes)\n      })\n  }\n  \n  createListType(listTypes) {\n    let typeArray = [...new Set(listTypes)];\n    typeArray.sort();\n    for (let i = 0; i < typeArray.length; i++) {\n      let radioButton = typeArray[i];\n      containerTop.appendChild(\n        this.createLabel(radioButton)\n      );\n    }\n  }\n}\n\n\n\nlet locations = new Locations(\"https://rickandmortyapi.com/api/location?page=1\");\nlocations.pickAllPage();\n\n\n\n\n// let icon = document.getElementById(\"icon\")\n\n// icon.addEventListener(\"click\", function() {\n//   let listDeroule = document.getElementById(\"deroule\");\n\n//   if (listDeroule.style.display == \"none\") {\n//     listDeroule.style.display = \"block\";\n//   } else {\n//     listDeroule.style.display = \"none\";\n//   }\n// });\n\n\n\n\n\n// function createListType() {\n//     let typeArray = [...new Set(listTypes)];\n//     for (let i = 0; i < typeArray.length; i++) {\n//         let radioButton = typeArray[i];\n//         containerLocation.appendChild(\n//             createLabel(radioButton)\n//         );\n//     }\n// }\n\n// function createInput(radioButton) {\n//     let input = document.createElement('input');\n//     input.setAttribute('type', \"radio\");\n//     input.setAttribute(\"id\", radioButton);\n//     input.setAttribute(\"value\", radioButton);\n//     input.setAttribute(\"name\", \"typeLocation\");\n//     input.addEventListener(\"change\", showPlanets)\n//     return input\n// }\n\n// function createLabel(radioButton) {\n//     let label = document.createElement('label');\n//     label.setAttribute('class', 'type__label')\n//     label.textContent = radioButton;\n//     label.appendChild(createInput(radioButton));\n//     return label\n// }\n\n// function showPlanets(e) {\n//     let url = \"https://rickandmortyapi.com/api/location?page=1\";\n// }\n\n// function showResidents(e) {\n//     _fetchData(e.target.dataset.url)\n//         .then((datas) => {\n//             const { residents } = datas;\n\n//             Promise.all(residents.map(url => fetch(url)))\n//         .then(resp => Promise.all( resp.map(res => res.json())))\n//         .then(results => {\n//             //boite modale a créer \n//             })\n//         })\n// }\n\n// function locations() {\n//     let url = \"https://rickandmortyapi.com/api/location?page=1\";\n//     _fetchData(url)\n//         .then((locations) => {\n//             const {results} = locations\n//             createLocations(results);\n//         })\n\n// }\n\n// locations();\n\n// function createLocations(locations) {\n//     let containerPlanets = document.querySelector('.container__planets');\n//     console.log(locations);\n//     locations.forEach(location => {\n//         containerPlanets.innerHTML += createLocation(location);\n\n//     });\n//     eventClickTitle();\n// }\n\n// function eventClickTitle() {\n//     let titles = document.querySelectorAll('.container__planets h2');\n//     titles.forEach(title => {\n//         title.addEventListener('click', showResidents)\n//     })\n// }\n\n// function createLocation(location) {\n//     return `<div class=\"planet\">\n\n//                 <h2 class=\"planet__name\" data-url=\"${location.url}\" >${location.name}</h2>\n\n//                 <p class=\"planet__type\">${location.type}</p>\n//                 <p class=\"planet__dimension\">${location.dimension}</p>\n//             </div>`;\n// }\n\n"]}